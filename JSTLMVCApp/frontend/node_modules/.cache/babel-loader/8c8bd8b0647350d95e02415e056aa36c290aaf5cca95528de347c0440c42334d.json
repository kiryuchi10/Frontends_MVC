{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Frontends_w_Backends\\\\Frontends_MVC\\\\JSTLMVCApp\\\\frontend\\\\src\\\\components\\\\FileList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileList = ({\n  userId\n}) => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchFiles = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/files/${userId}`);\n        setFiles(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching files:\", error);\n        setLoading(false);\n      }\n    };\n    fetchFiles();\n  }, [userId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading files...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n  if (files.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No files uploaded yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Uploaded Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: file.fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), \" (Uploaded at: \", new Date(file.uploadedAt).toLocaleString(), \")\", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Path: \", file.filePath]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)]\n      }, file.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(FileList, \"zMnqggxtwlDmTOERg77mrfWXT00=\");\n_c = FileList;\nexport default FileList;\nvar _c;\n$RefreshReg$(_c, \"FileList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","FileList","userId","_s","files","setFiles","loading","setLoading","fetchFiles","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","file","Date","uploadedAt","toLocaleString","filePath","id","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Frontends_w_Backends/Frontends_MVC/JSTLMVCApp/frontend/src/components/FileList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst FileList = ({ userId }) => {\r\n    const [files, setFiles] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchFiles = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8080/api/files/${userId}`);\r\n                setFiles(response.data);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error(\"Error fetching files:\", error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchFiles();\r\n    }, [userId]);\r\n\r\n    if (loading) {\r\n        return <p>Loading files...</p>;\r\n    }\r\n\r\n    if (files.length === 0) {\r\n        return <p>No files uploaded yet.</p>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Your Uploaded Files</h2>\r\n            <ul>\r\n                {files.map((file) => (\r\n                    <li key={file.id}>\r\n                        <strong>{file.fileName}</strong> (Uploaded at: {new Date(file.uploadedAt).toLocaleString()})\r\n                        <p>Path: {file.filePath}</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FileList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,mCAAmCR,MAAM,EAAE,CAAC;QAC7EG,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAAC;QACvBJ,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CL,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDC,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;EAEZ,IAAII,OAAO,EAAE;IACT,oBAAON,OAAA;MAAAc,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAClC;EAEA,IAAId,KAAK,CAACe,MAAM,KAAK,CAAC,EAAE;IACpB,oBAAOnB,OAAA;MAAAc,QAAA,EAAG;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACxC;EAEA,oBACIlB,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BlB,OAAA;MAAAc,QAAA,EACKV,KAAK,CAACgB,GAAG,CAAEC,IAAI,iBACZrB,OAAA;QAAAc,QAAA,gBACId,OAAA;UAAAc,QAAA,EAASO,IAAI,CAACN;QAAQ;UAAAA,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,mBAAe,EAAC,IAAII,IAAI,CAACD,IAAI,CAACE,UAAU,CAAC,CAACC,cAAc,CAAC,CAAC,EAAC,GAC3F,eAAAxB,OAAA;UAAAc,QAAA,GAAG,QAAM,EAACO,IAAI,CAACI,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFvBG,IAAI,CAACK,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACf,EAAA,CAxCIF,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}